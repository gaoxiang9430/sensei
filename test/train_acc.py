import numpy as np
import matplotlib
import matplotlib.pyplot as plt
from scipy import ndimage
from matplotlib.backends.backend_pdf import PdfPages

font = {'family' : 'normal',
        'size'   : 20}

matplotlib.rc('font', **font)

class CIFAR10:
    def __init__(self):
        pass
    def replace30(self):
        return [0.4239, 0.5295, 0.6008, 0.6395, 0.6737, 0.6975, 0.7214, 0.7376, 0.7505, 0.7631, 0.7729, 0.7817, 0.7888, 0.7944, 0.8031, 0.8065, 0.8116, 0.8165, 0.8226, 0.8257, 0.8294, 0.8330, 0.8344, 0.8401, 0.8424, 0.8442, 0.8480, 0.8491, 0.8514, 0.8551, 0.8555, 0.8577, 0.8598, 0.8601, 0.8641, 0.8667, 0.8648, 0.8696, 0.8695, 0.8734, 0.8758, 0.8742, 0.8751, 0.8766, 0.8756, 0.8784, 0.8802, 0.8814, 0.8826, 0.8823, 0.8846, 0.8843, 0.8848, 0.8872, 0.8893, 0.8872, 0.8898, 0.8915, 0.8888, 0.8916, 0.8947, 0.8917, 0.8931, 0.8945, 0.8939, 0.8948, 0.8970, 0.8975, 0.8974, 0.8996, 0.9001, 0.8996, 0.9014, 0.9007, 0.8993, 0.9028, 0.9027, 0.9044, 0.9037, 0.9034, 0.9038, 0.9133, 0.9338, 0.9382, 0.9412, 0.9430, 0.9435, 0.9461, 0.9476, 0.9473, 0.9483, 0.9481, 0.9493, 0.9498, 0.9499, 0.9518, 0.9511, 0.9524, 0.9539, 0.9561, 0.9417, 0.9413, 0.9535, 0.9534, 0.9554, 0.9550, 0.9554, 0.9559, 0.9574, 0.9566, 0.9579, 0.9571, 0.9584, 0.9580, 0.9585, 0.9583, 0.9597, 0.9582, 0.9588, 0.9609, 0.9607, 0.9598, 0.9595, 0.9617, 0.9627, 0.9631, 0.9622, 0.9627, 0.9635, 0.9624, 0.9624, 0.9637, 0.9621, 0.9636, 0.9634, 0.9639, 0.9633, 0.9642, 0.9639, 0.9638, 0.9651, 0.9654, 0.9652, 0.9649, 0.9662, 0.9653, 0.9659, 0.9646, 0.9667, 0.9666, 0.9663, 0.9671, 0.9676, 0.9655, 0.9667, 0.9683, 0.9661, 0.9672, 0.9664, 0.9680, 0.9691, 0.9674, 0.9703, 0.9736, 0.9736, 0.9739, 0.9754, 0.9752, 0.9744, 0.9746, 0.9748, 0.9761, 0.9770, 0.9748, 0.9764, 0.9766, 0.9763, 0.9760, 0.9763, 0.9762, 0.9762, 0.9757, 0.9766, 0.9768, 0.9768, 0.9765, 0.9777, 0.9770, 0.9770, 0.9782, 0.9775, 0.9768, 0.9769, 0.9767, 0.9776, 0.9780, 0.9771, 0.9786, 0.9775, 0.9776]

    def w10(self):
        return [0.2923, 0.3611, 0.3498, 0.4009, 0.4188, 0.4533, 0.4800, 0.4966, 0.5229, 0.5399, 0.5621, 0.5752, 0.5934, 0.6017, 0.6150, 0.6372, 0.6420, 0.6467, 0.6658, 0.6704, 0.6822, 0.6895, 0.6973, 0.7007, 0.7149, 0.7177, 0.7254, 0.7250, 0.7337, 0.7394, 0.7423, 0.7448, 0.7424, 0.7576, 0.7637, 0.7652, 0.7569, 0.7671, 0.7715, 0.7696, 0.7724, 0.7759, 0.7869, 0.7880, 0.7866, 0.7918, 0.7950, 0.7939, 0.7941, 0.7997, 0.8027, 0.8068, 0.8076, 0.8051, 0.8068, 0.8017, 0.8116, 0.8123, 0.8194, 0.8127, 0.8128, 0.8119, 0.8160, 0.8190, 0.8180, 0.8234, 0.8247, 0.8221, 0.8256, 0.8300, 0.8264, 0.8247, 0.8259, 0.8335, 0.8308, 0.8373, 0.8303, 0.8342, 0.8282, 0.8439, 0.8335, 0.8261, 0.8569, 0.8639, 0.8663, 0.8701, 0.8721, 0.8740, 0.8766, 0.8761, 0.8786, 0.8798, 0.8814, 0.8831, 0.8837, 0.8855, 0.8850, 0.8859, 0.8908, 0.8894, 0.8891, 0.8899, 0.8911, 0.8919, 0.8927, 0.8934, 0.8949, 0.8965, 0.8952, 0.8958, 0.8996, 0.8985, 0.8999, 0.8990, 0.9003, 0.9006, 0.9002, 0.9040, 0.9038, 0.9054, 0.9037, 0.9043, 0.9050, 0.9068, 0.9064, 0.9070, 0.9073, 0.9061, 0.9088, 0.9095, 0.9102, 0.9116, 0.9130, 0.9084, 0.9124, 0.9138, 0.9122, 0.9137, 0.9138, 0.9158, 0.9154, 0.9160, 0.9152, 0.9156, 0.9158, 0.9177, 0.9176, 0.9186, 0.9177, 0.9176, 0.9231, 0.9188, 0.9213, 0.9208, 0.9200, 0.9229, 0.9223, 0.9254, 0.9231, 0.9238, 0.9221, 0.9227, 0.9240, 0.9333, 0.9355, 0.9361, 0.9368, 0.9385, 0.9379, 0.9387, 0.9389, 0.9414, 0.9403, 0.9409, 0.9413, 0.9411, 0.9402, 0.9418, 0.9411, 0.9416, 0.9413, 0.9407, 0.9409, 0.9425, 0.9416, 0.9425, 0.9424, 0.9426, 0.9427, 0.9439, 0.9428, 0.9431, 0.9424, 0.9441, 0.9434, 0.9443, 0.9438, 0.9446, 0.9441, 0.9449]

    def ga(self): #TODO
        return [0.2728, 0.3472, 0.3672, 0.4320, 0.4509, 0.4802, 0.5004, 0.5175, 0.5348, 0.5514, 0.5691, 0.5766, 0.5929, 0.6038, 0.6129, 0.6256, 0.6292, 0.6357, 0.6498, 0.6536, 0.6651, 0.6682, 0.6801, 0.6822, 0.6844, 0.6915, 0.6965, 0.7003, 0.7029, 0.7068, 0.7114, 0.7144, 0.7235, 0.7242, 0.7243, 0.7300, 0.7298, 0.7339, 0.7385, 0.7368, 0.7466, 0.7439, 0.7472, 0.7501, 0.7601, 0.7651, 0.7623, 0.7682, 0.7610, 0.7611, 0.7705, 0.7712, 0.7715, 0.7726, 0.7789, 0.7789, 0.7682, 0.7726, 0.7802, 0.7833, 0.7746, 0.7757, 0.7807, 0.7955, 0.7862, 0.7927, 0.7890, 0.7936, 0.7948, 0.7880, 0.7906, 0.7987, 0.7995, 0.7995, 0.8040, 0.8035, 0.8029, 0.7986, 0.7986, 0.8072, 0.8105, 0.8113, 0.8097, 0.8140, 0.8047, 0.8137, 0.8111, 0.8132, 0.8031, 0.8412, 0.8486, 0.8501, 0.8533, 0.8531, 0.8546, 0.8553, 0.8569, 0.8576, 0.8558, 0.8575, 0.8593, 0.8599, 0.8619, 0.8625, 0.8658, 0.8656, 0.8657, 0.8875, 0.8931, 0.8933, 0.8903, 0.8895, 0.8872, 0.8869, 0.8871, 0.8866, 0.8849, 0.8844, 0.8835, 0.8824, 0.8846, 0.8839, 0.8850, 0.8843, 0.8848, 0.8862, 0.8846, 0.8858, 0.8876, 0.8869, 0.8888, 0.8905, 0.8887, 0.8914, 0.8912, 0.8932, 0.8928, 0.8936, 0.8943, 0.8961, 0.8955, 0.8954, 0.8979, 0.8991, 0.8989, 0.8987, 0.9008, 0.8989, 0.9019, 0.9017, 0.9026, 0.9043, 0.9042, 0.9046, 0.9057, 0.9057, 0.9076, 0.9058, 0.9080, 0.9085, 0.9084, 0.9092, 0.9097, 0.9105, 0.9131, 0.9079, 0.9105, 0.9119, 0.9111, 0.9157, 0.9263, 0.9288, 0.9277, 0.9255, 0.9269, 0.9247, 0.9248, 0.9232, 0.9233, 0.9213, 0.9214, 0.9210, 0.9205, 0.9195, 0.9187, 0.9179, 0.9180, 0.9193, 0.9178, 0.9173, 0.9170, 0.9177, 0.9177, 0.9181, 0.9192, 0.9177, 0.9191, 0.9168, 0.9175, 0.9175]

class CIFAR10_2:
    def __init__(self):
        pass
    def replace30(self):
        return [0.4212, 0.5096, 0.5792, 0.6244, 0.6562, 0.6833, 0.7072, 0.7196, 0.7373, 0.7506, 0.7568, 0.7658, 0.7745, 0.7813, 0.7895, 0.7936, 0.8017, 0.8047, 0.8117, 0.8139, 0.8181, 0.8215, 0.8247, 0.8296, 0.8347, 0.8372, 0.8395, 0.8419, 0.8443, 0.8461, 0.8484, 0.8497, 0.8521, 0.8547, 0.8551, 0.8613, 0.8632, 0.8604, 0.8633, 0.8658, 0.8659, 0.8691, 0.8713, 0.8701, 0.8726, 0.8733, 0.8743, 0.8753, 0.8758, 0.8792, 0.8789, 0.8801, 0.8828, 0.8821, 0.8833, 0.8825, 0.8868, 0.8881, 0.8876, 0.8895, 0.8881, 0.8896, 0.8917, 0.8930, 0.8908, 0.8899, 0.8917, 0.8936, 0.8954, 0.8945, 0.8976, 0.8945, 0.8958, 0.8986, 0.9008, 0.9012, 0.8990, 0.9007, 0.9005, 0.9020, 0.9023, 0.9095, 0.9337, 0.9372, 0.9408, 0.9440, 0.9435, 0.9454, 0.9477, 0.9464, 0.9488, 0.9489, 0.9503, 0.9507, 0.9530, 0.9513, 0.9542, 0.9547, 0.9532, 0.9549, 0.9633, 0.9503, 0.9542, 0.9557, 0.9556, 0.9560, 0.9579, 0.9578, 0.9576, 0.9584, 0.9579, 0.9596, 0.9596, 0.9595, 0.9600, 0.9588, 0.9608, 0.9607, 0.9610, 0.9612, 0.9607, 0.9633, 0.9639, 0.9615, 0.9633, 0.9633, 0.9642, 0.9630, 0.9633, 0.9642, 0.9638, 0.9645, 0.9654, 0.9652, 0.9650, 0.9659, 0.9666, 0.9660, 0.9656, 0.9661, 0.9667, 0.9671, 0.9676, 0.9656, 0.9669, 0.9681, 0.9687, 0.9689, 0.9692, 0.9682, 0.9699, 0.9687, 0.9678, 0.9695, 0.9704, 0.9704, 0.9697, 0.9695, 0.9691, 0.9701, 0.9703, 0.9698, 0.9722, 0.9759, 0.9762, 0.9772, 0.9772, 0.9784, 0.9774, 0.9782, 0.9781, 0.9762, 0.9777, 0.9785, 0.9783, 0.9788, 0.9788, 0.9794, 0.9791, 0.9795, 0.9787, 0.9791, 0.9788, 0.9797, 0.9799, 0.9803, 0.9793, 0.9800, 0.9801, 0.9799, 0.9798, 0.9791, 0.9804, 0.9796, 0.9809, 0.9806, 0.9814, 0.9797, 0.9801, 0.9806]

    def w10(self): #TODO
        return [0.2180, 0.2845, 0.3280, 0.3673, 0.4143, 0.4490, 0.4869, 0.5090, 0.5335, 0.5599, 0.5817, 0.5995, 0.6105, 0.6255, 0.6430, 0.6505, 0.6618, 0.6717, 0.6800, 0.6914, 0.6959, 0.7070, 0.7104, 0.7172, 0.7201, 0.7284, 0.7411, 0.7299, 0.7535, 0.7422, 0.7593, 0.7468, 0.7544, 0.7683, 0.7574, 0.7781, 0.7718, 0.7782, 0.7726, 0.7896, 0.7885, 0.7847, 0.7857, 0.7882, 0.7876, 0.7877, 0.7998, 0.7984, 0.7994, 0.8032, 0.8007, 0.8052, 0.8049, 0.8037, 0.8097, 0.8086, 0.8144, 0.8125, 0.8174, 0.8161, 0.8188, 0.8218, 0.8168, 0.8209, 0.8261, 0.8284, 0.8295, 0.8237, 0.8297, 0.8301, 0.8240, 0.8307, 0.8249, 0.8291, 0.8299, 0.8297, 0.8333, 0.8266, 0.8352, 0.8355, 0.8392, 0.8332, 0.8642, 0.8745, 0.8766, 0.8798, 0.8848, 0.8874, 0.8880, 0.8886, 0.8922, 0.8924, 0.8954, 0.8961, 0.8972, 0.8980, 0.8986, 0.9001, 0.9016, 0.9013, 0.9032, 0.9043, 0.9041, 0.9060, 0.9070, 0.9073, 0.9081, 0.9099, 0.9105, 0.9124, 0.9117, 0.9123, 0.9130, 0.9146, 0.9158, 0.9150, 0.9189, 0.9176, 0.9180, 0.9182, 0.9200, 0.9216, 0.9209, 0.9211, 0.9221, 0.9223, 0.9233, 0.9249, 0.9256, 0.9262, 0.9242, 0.9271, 0.9269, 0.9284, 0.9280, 0.9305, 0.9303, 0.9297, 0.9322, 0.9301, 0.9313, 0.9323, 0.9318, 0.9354, 0.9309, 0.9352, 0.9333, 0.9347, 0.9354, 0.9338, 0.9351, 0.9360, 0.9369, 0.9380, 0.9383, 0.9382, 0.9382, 0.9394, 0.9397, 0.9396, 0.9409, 0.9417, 0.9414, 0.9516, 0.9537, 0.9547, 0.9569, 0.9565, 0.9580, 0.9577, 0.9599, 0.9599, 0.9601, 0.9595, 0.9598, 0.9598]

    def ga(self):
        return [0.2556, 0.3028, 0.3548, 0.3998, 0.4304, 0.4649, 0.4903, 0.5278, 0.5253, 0.5520, 0.5804, 0.5798, 0.6085, 0.6266, 0.6255, 0.6266, 0.6462, 0.6488, 0.6809, 0.6775, 0.6664, 0.6816, 0.6943, 0.6888, 0.7033, 0.7089, 0.7112, 0.7102, 0.7200, 0.7238, 0.7323, 0.7332, 0.7331, 0.7367, 0.7373, 0.7464, 0.7496, 0.7490, 0.7569, 0.7572, 0.7584, 0.7608, 0.7598, 0.7683, 0.7662, 0.7692, 0.7693, 0.7710, 0.7772, 0.7762, 0.7758, 0.7797, 0.7793, 0.7847, 0.7855, 0.7835, 0.7861, 0.7868, 0.7885, 0.7885, 0.7938, 0.7899, 0.7943, 0.7979, 0.7934, 0.7948, 0.7991, 0.8045, 0.8038, 0.7918, 0.8066, 0.8060, 0.8081, 0.8066, 0.8113, 0.8097, 0.8140, 0.8047, 0.8137, 0.8111, 0.8132, 0.8031, 0.8412, 0.8486, 0.8501, 0.8533, 0.8531, 0.8546, 0.8553, 0.8569, 0.8576, 0.8558, 0.8575, 0.8593, 0.8599, 0.8619, 0.8625, 0.8658, 0.8656, 0.8657, 0.8875, 0.8931, 0.8933, 0.8903, 0.8895, 0.8872, 0.8869, 0.8871, 0.8866, 0.8849, 0.8844, 0.8835, 0.8824, 0.8846, 0.8839, 0.8850, 0.8843, 0.8848, 0.8862, 0.8846, 0.8858, 0.8876, 0.8869, 0.8888, 0.8905, 0.8887, 0.8914, 0.8912, 0.8932, 0.8928, 0.8936, 0.8943, 0.8961, 0.8955, 0.8954, 0.8979, 0.8991, 0.8989, 0.8987, 0.9008, 0.8989, 0.9019, 0.9017, 0.9026, 0.9043, 0.9042, 0.9046, 0.9057, 0.9057, 0.9076, 0.9058, 0.9080, 0.9085, 0.9084, 0.9092, 0.9097, 0.9105, 0.9131, 0.9079, 0.9105, 0.9119, 0.9111, 0.9157, 0.9263, 0.9288, 0.9277, 0.9255, 0.9269, 0.9247, 0.9248, 0.9232, 0.9233, 0.9213, 0.9214, 0.9210, 0.9205, 0.9195, 0.9187, 0.9179, 0.9180, 0.9193, 0.9178, 0.9173, 0.9170, 0.9177, 0.9177, 0.9181, 0.9192, 0.9177, 0.9191, 0.9168, 0.9175, 0.9175, 0.9180, 0.9179, 0.9174, 0.9174, 0.9179, 0.9166, 0.9187]

class GTSRB1:
    def __init__(self):
        pass
    def replace30(self):
        return [0.5191 , 0.7270 , 0.8600 , 0.9074 , 0.9312 , 0.9404 , 0.9496 , 0.9583 , 0.9641 , 0.9666 , 0.9686 , 0.9743 , 0.9742 , 0.9754 , 0.9756 , 0.9792 , 0.9799 , 0.9813 , 0.9813 , 0.9820 , 0.9824 , 0.9823 , 0.9840 , 0.9837 , 0.9851 , 0.9863 , 0.9844 , 0.9845 , 0.9857 , 0.9878]

    def w10(self):
        return [0.1666 , 0.4307 , 0.6416 , 0.7785 , 0.8390 , 0.8789 , 0.9053 , 0.9204 , 0.9282 , 0.9397 , 0.9436 , 0.9512 , 0.9520 , 0.9571 , 0.9612 , 0.9646 , 0.9634 , 0.9649 , 0.9684 , 0.9686 , 0.9664 , 0.9710 , 0.9722 , 0.9727 , 0.9723 , 0.9753 , 0.9753 , 0.9784 , 0.9766 , 0.9776]

    def ga(self):
        return [0.1703 , 0.4982 , 0.7223 , 0.8073 , 0.8497 , 0.8720 , 0.8921 , 0.9030 , 0.9166 , 0.9215 , 0.9297 , 0.9365 , 0.9405 , 0.9437 , 0.9512 , 0.9518 , 0.9535 , 0.9554 , 0.9576 , 0.9582 , 0.9588 , 0.9605 , 0.9637 , 0.9653 , 0.9665 , 0.9670 , 0.9669 , 0.9693 , 0.9695 , 0.9699]

class GTSRB2:
    def __init__(self):
        pass
    def replace30(self):
        return [0.2029 , 0.5368 , 0.7561 , 0.8395 , 0.8823 , 0.9104 , 0.9243 , 0.9301 , 0.9407 , 0.9429 , 0.9507 , 0.9497 , 0.9524 , 0.9549 , 0.9589 , 0.9594 , 0.9639 , 0.9631 , 0.9624 , 0.9662 , 0.9675 , 0.9648 , 0.9666 , 0.9682 , 0.9683 , 0.9688 , 0.9692 , 0.9687 , 0.9674 , 0.9698 , 0.9712 , 0.9691 , 0.9740 , 0.9727 , 0.9695 , 0.9708 , 0.9683 , 0.9744 , 0.9711 , 0.9763 , 0.9735 , 0.9746 , 0.9751 , 0.9732 , 0.9737 , 0.9761 , 0.9755 , 0.9755 , 0.9770 , 0.9762 , 0.9736 , 0.9769 , 0.9739 , 0.9737 , 0.9759 , 0.9757 , 0.9743 , 0.9753 , 0.9755 , 0.9755]

    def w10(self):
        return [0.0692 , 0.1552 , 0.3447 , 0.4551 , 0.5683 , 0.6770 , 0.7435 , 0.7814 , 0.8239 , 0.8494 , 0.8575 , 0.8760 , 0.8850 , 0.8940 , 0.8939 , 0.8984 , 0.9039 , 0.9037 , 0.9098 , 0.9132 , 0.9129 , 0.9150 , 0.9149 , 0.9181 , 0.9228 , 0.9215 , 0.9215 , 0.9217 , 0.9232 , 0.9274 , 0.9298 , 0.9269 , 0.9278 , 0.9316 , 0.9306 , 0.9304 , 0.9310 , 0.9334 , 0.9320 , 0.9308 , 0.9325 , 0.9327 , 0.9336 , 0.9357 , 0.9316 , 0.9311 , 0.9385 , 0.9374 , 0.9317 , 0.9370 , 0.9385 , 0.9390 , 0.9396 , 0.9382 , 0.9375 , 0.9396 , 0.9380 , 0.9391 , 0.9399]

    def ga(self):
        return [0.0791 , 0.2516 , 0.3847 , 0.5101 , 0.6339 , 0.7055 , 0.7454 , 0.7720 , 0.7865 , 0.8002 , 0.7993 , 0.8100 , 0.8147 , 0.8194 , 0.8244 , 0.8269 , 0.8315 , 0.8316 , 0.8351 , 0.8386 , 0.8366 , 0.8425 , 0.8427 , 0.8433 , 0.8439 , 0.8451 , 0.8412 , 0.8435 , 0.8445 , 0.8476 , 0.8424 , 0.8489 , 0.8511 , 0.8513 , 0.8514 , 0.8539 , 0.8503 , 0.8516 , 0.8560 , 0.8547 , 0.8501 , 0.8561 , 0.8575 , 0.8563 , 0.8590 , 0.8583 , 0.8564 , 0.8545 , 0.8576 , 0.8609 , 0.8569 , 0.8610 , 0.8593 , 0.8633 , 0.8617 , 0.8628 , 0.8604 , 0.8554 , 0.8585 , 0.8633]


fig = plt.figure(figsize=(10, 7))
dataset = CIFAR10()
plt.xlabel('epoch', fontsize=20)
plt.ylabel('training accuracy', fontsize=20)
plt.figure(1)
ax=plt.subplot(111)
#ax.set_aspect(, 0.6)
#plt.axis([0, 1, -, 0.05, 1])
line1, = plt.plot(dataset.replace30(), 'g', label="replace30", linewidth=3.0)
line2, = plt.plot(dataset.w10(), 'r--', label="worst-of-10", linewidth=3.0)
line3, = plt.plot(dataset.ga(), 'b:', label="GA(loss)", linewidth=3.0)
plt.legend()
plt.show()

